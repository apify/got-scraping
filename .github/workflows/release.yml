name: Check & Release

on:
  # Push to master will deploy a beta version
  push:
    branches:
      - master
  # A release via GitHub releases will deploy a latest version
  release:
    types: [ published ]

jobs:
  build_and_test:
    name: Build & Test
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [15, 16, 18, 20]

    steps:
      -
        uses: actions/checkout@v3
      -
        name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      -
        name: Install Dependencies
        run: npm install
      -
        name: Run Tests
        run: npm test
        env:
          APIFY_PROXY_PASSWORD: ${{ secrets.APIFY_TEST_USER_PROXY_PASSWORD }}

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      -
        uses: actions/checkout@v3
      -
        name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      -
        run: npm install
      -
        run: npm run lint


  # The deploy job is long but there are only 2 important parts. NPM publish
  # and triggering of docker image builds in the apify-actor-docker repo.
  deploy:
    name: Publish to NPM
    needs: [build_and_test, lint]
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v3
      -
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      -
        # Determine if this is a beta or latest release
        name: Set Release Tag
        run: echo "RELEASE_TAG=$(if [ ${{ github.event_name }} = release ]; then echo latest; else echo beta; fi)" >> $GITHUB_ENV
      -
        # Check version consistency and increment pre-release version number for beta only.
        name: Bump pre-release version
        if: env.RELEASE_TAG == 'beta'
        run: node ./.github/scripts/before-beta-release.js
      -
        name: Install Dependencies
        run: npm install
      -
        name: Publish to NPM
        run: npm publish --tag ${{ env.RELEASE_TAG }} --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.APIFY_SERVICE_ACCOUNT_NPM_TOKEN }}
      -
        # Latest version is tagged by the release process so we only tag beta here.
        name: Tag Version
        if: env.RELEASE_TAG == 'beta'
        run: |
          git_tag=v`node -p "require('./package.json').version"`
          git tag $git_tag
          git push origin $git_tag
